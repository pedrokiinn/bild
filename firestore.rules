rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      // Verifica se o usuário autenticado tem a role de 'admin' no seu documento.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      // Verifica se o usuário autenticado é o dono do documento.
      return request.auth != null && request.auth.uid == userId;
    }

    // Regras para a coleção de usuários
    match /users/{userId} {
      // PERMISSÃO CORRIGIDA: Qualquer um pode criar um usuário (necessário para o cadastro).
      allow create: if true;
      
      // PERMISSÃO CORRIGIDA: Qualquer usuário logado pode consultar a lista (necessário para login e gerenciamento).
      allow list: if request.auth != null;

      // Um usuário pode ler ou atualizar seus próprios dados. Admins podem ler/atualizar qualquer um.
      allow get, update: if isOwner(userId) || isAdmin();
      
      // Apenas admins podem deletar usuários.
      allow delete: if isAdmin();
    }

    // Regras para a coleção de veículos
    match /vehicles/{vehicleId} {
      // Qualquer usuário logado pode ler a lista de veículos.
      allow read: if request.auth != null;
      
      // Apenas admins podem criar, atualizar ou deletar veículos.
      allow write: if isAdmin();
    }

    // Regras para a coleção de checklists
    match /checklists/{checklistId} {
      // Qualquer usuário logado pode ler ou criar checklists.
      allow read, create: if request.auth != null;
      
      // Um usuário pode atualizar seu próprio checklist (para registrar chegada), ou um admin pode atualizar qualquer um.
      allow update: if (isOwner(resource.data.driverId) || isAdmin());
      
      // Apenas admins podem deletar checklists.
      allow delete: if isAdmin();
    }

    // Regras para os relatórios de exclusão
    match /deletionReports/{reportId} {
        // Apenas admins podem ler e escrever relatórios.
        allow read, write: if isAdmin();
    }
  }
}
