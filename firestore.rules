rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      // Check if the user making the request has the 'admin' role in their user document.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      // Check if the authenticated user's ID matches the document ID they are trying to access.
      return request.auth.uid == userId;
    }

    // Default rule: Deny all reads/writes unless explicitly allowed in nested blocks.
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection Rules
    match /users/{userId} {
      // Allow anyone to create a user (for registration).
      // Allow reading the list of users for login/username checks.
      allow list, create: if true;

      // Allow a user to get their own data, or an admin to get any user's data.
      allow get: if request.auth != null && (isOwner(userId) || isAdmin());
      
      // Allow a user to update their own data (e.g., password), or an admin to update any user's data (e.g., role).
      allow update: if request.auth != null && (isOwner(userId) || isAdmin());

      // Only admins can delete users.
      allow delete: if request.auth != null && isAdmin();
    }

    // Vehicles Collection Rules
    match /vehicles/{vehicleId} {
      // Any authenticated user can read vehicle info.
      allow read: if request.auth != null;
      // Only admins can create, update, or delete vehicle info.
      allow write: if request.auth != null && isAdmin();
    }

    // Checklists Collection Rules
    match /checklists/{checklistId} {
      // Any authenticated user can read the list of checklists or get a specific one.
      allow read: if request.auth != null;

      // Any authenticated user can create a checklist.
      allow create: if request.auth != null;
      
      // Only the user who created the checklist or an admin can update it.
      allow update: if request.auth != null && (resource.data.driverName == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.name || isAdmin());

      // Only an admin can delete a checklist.
      allow delete: if request.auth != null && isAdmin();
    }
    
    // Deletion Reports Collection Rules (admin only)
    match /deletionReports/{reportId} {
        allow read, write: if request.auth != null && isAdmin();
    }
  }
}
