rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection
    match /users/{userId} {
      // Allow anyone to query the user list by name (for login/signup checks)
      // and admins to list all users.
      allow list: if request.query.keys.hasOnly(['name']) || isAdmin();
      
      // Allow reading your own user data, or any user data if you're an admin.
      allow get: if isOwner(userId) || isAdmin();
      
      // Allow anyone to create a new user (signup).
      allow create: if true;

      // Allow updating your own data, or any user data if you're an admin.
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admins can delete users.
      allow delete: if isAdmin();
    }

    // Vehicles Collection
    match /vehicles/{vehicleId} {
      allow list, get: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }

    // Checklists Collection
    match /checklists/{checklistId} {
      allow list, get: if request.auth != null;
      allow create: if request.auth != null;
      // Allow update if you are the owner (driver) or an admin.
      allow update: if isOwner(resource.data.driverId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Deletion Reports Collection
    match /deletionReports/{reportId} {
        allow read, write, delete: if isAdmin();
    }
  }
}
